name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Paso 1: Checkout del código fuente
      - name: Checkout Code
        uses: actions/checkout@v2

      # Paso 2: Configuración de JDK 21 y Maven usando actions/setup-java
      - name: Set up JDK 17 and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Versión de Java que deseas usar
          architecture: 'x64'  # Arquitectura del sistema (opcional, por defecto es x64)
          distribution: 'temurin' # Distribution Temurin

      # Paso 3: Verificación de la instalación de Java y Maven
      - name: Verify Java and Maven installation
        run: |
          java -version
          mvn -version

      # Paso 4: Compilación del proyecto Maven
      - name: Build with Maven
        run: |
          mvn -B -f /home/runner/work/XMLApi/XMLApi/xmlapi/pom.xml clean package -DskipTests

      # Paso 5: Análisis de SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          projectBaseDir: '.' # Cambia si tu base de proyecto es diferente
          args: >
            -Dsonar.projectKey=XMLApi
            -Dsonar.organization=echotech-sv
            -Dsonar.host.url=https://sonar.echotechs.net
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}          

      # Paso 6: Build de la imagen Docker
      - name: Build Docker Image
        run: |
          docker build --build-arg PROFILE=local -t ghcr.io/echotech-sv/XMLApi/XMLApi:latest .

      # Paso 7: Login en GitHub Container Registry
      - name: Docker Login to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Paso 8: Subida de la imagen Docker a GHCR
      - name: Push Docker Image
        run: |
          docker push ghcr.io/echotech-sv/XMLApi/XMLApi:latest

      # Paso 9: Publicacion en el servidor o un cluster de kubernetes 2